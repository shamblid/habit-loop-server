service: habit-api 

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  tracing:
    lambda: true
  environment:
    NODE_ENV: ${env:NODE_ENV}
    USER_TABLE: ${self:custom.config.USER_TABLE}
    REDIS_HOST: ${env:REDIS_HOST}
    REDIS_PASSWORD: ${env:REDIS_SECRET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateTable
        - dynamodb:BatchWriteItem
        - dynamodb:DescribeTimeToLive
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.config.USER_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.config.USER_TABLE}/index/*"

functions:
  graphql:
    handler: app.graphql
    events:
      - http:
          path: graphql
          method: post
          cors: true

  pushNotifications:
    handler: lib/pushNotifications.handler
    events:
      - schedule:
          name: push-notification-handler
          description: 'Sends push notification reminding user to train.'
          rate: rate(10 days)
      - http:
          path: notification
          method: get

plugins:
  # - serverless-dynamodb-local
  - serverless-offline

resources:
  - ${file(resources/dynamo/UserTable.yml)}

custom:
  config:
    USER_TABLE: user-records-${self:provider.stage}
  dynamodb:
      start:
        migrate: false
        seed: false
      seed:
        test:
          sources:
            - table: user-records-dev-2
              sources: [./resources/test_data.json]